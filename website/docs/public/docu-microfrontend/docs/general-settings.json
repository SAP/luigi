{"name":"general-settings.md","shortName":"general-settings","contents":"<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  </head>\n  <body>\n    <h1>General settings</h1>\n    <p>The configuration file contains a section called <strong>Settings</strong> in which you can configure additional Luigi options.</p>\n    <pre><code class=\"language-javascript\">settings: {\n  hideNavigation: false\n  backdropDisabled : false,\n  header: {  object / function / Promise\n    logo: 'path/to/image.png',\n    title: 'Luigi Demo',\n    favicon: 'path/to/favicon.ico'\n  },\n  sideNavFooterText: 'MyLovelyApp 1.0.0',\n  customTranslationImplementation: () => {\n    return {\n      getTranslation: (key, interpolations, locale) => {\n        return translatedText;\n      }\n    };\n  },\n  customSandboxRules: ['allow-downloads-without-user-activation'],\n  appLoadingIndicator: {\n    hideAutomatically: true\n  }\n}\n</code></pre>\n    <ul>\n      <li><strong>hideNavigation</strong> disables Luigi's default out-of-the-box navigation when set to <code>true</code>. As a result, neither the left nor top navigation is visible in your application, and you can implement your own navigation UI. By default, the parameter is set to <code>false</code>, which means the navigation is enabled.</li>\n      <li><strong>backdropDisabled</strong> prevents the backdrop layer from covering the top and left navigation when showing modal windows. By default, the backdrop is set to <code>true</code>.</li>\n      <li><strong>header.logo</strong> defines the top left navigation logo. It has a fixed height of 28px.</li>\n      <li><strong>header.title</strong> defines the top left navigation title.</li>\n      <li><strong>header.favicon</strong> defines the favicon. It requires a standard favicon file with the <code>.ico</code> extension, and 16x16px or 32x32px dimensions.</li>\n      <li>\n        <strong>responsiveNavigation</strong> allows customizing the navigation display settings. For example, you can define a button which shows or completely hides the left navigation, or a button which collapses the navigation to only show the icons.\n        You can set the following values:\n        <ul>\n          <li><code>simple</code> displays the button on the left side of the top navigation regardless of the browser windowÂ´s size.</li>\n          <li><code>simpleMobileOnly</code> displays the button on the left side of the top navigation when the browser window is narrower than <code>600px</code>.</li>\n          <li>\n            <code>semiCollapsible</code> displays the arrow button at the bottom of the left side navigation. Once you click the button, the navigation shows up or collapses.\n            If you don't specify any value for <strong>responsiveNavigation</strong>, the buttons remain hidden. The same applies when you enable <strong>hideSideNav</strong> for the currently active navigation node.\n          </li>\n        </ul>\n      </li>\n      <li><strong>sideNavFooterText</strong> is a string displayed in a sticky footer inside the side navigation. It is a good place to display the version of your application.</li>\n      <li><strong>customTranslationImplementation</strong> provides a custom localization implementation. It can be an Object or a Function returning an Object. This Object must provide the <strong>getTranslation</strong> Function as property:</li>\n    </ul>\n    <pre><code class=\"language-javascript\">{\n  getTranslation: (key, interpolations, locale) => {\n    // should return translation of the 'key' in the 'locale' or current locale\n  }\n}\n</code></pre>\n    <blockquote>\n      <p><strong>NOTE:</strong> You can translate Luigi internal messages by providing translation for <a href=\"../core/src/utilities/defaultLuigiTranslationTable.js\">these keys</a>.</p>\n      <ul>\n        <li><strong>customSandboxRules</strong> is an array of custom rules for the content in the iframe. You can extend the <a href=\"https://github.com/SAP/luigi/blob/af1deebb392dcec6490f72576e32eb5853a894bc/core/src/utilities/helpers/iframe-helpers.js#L140\">Luigi default sandbox rules</a> by adding further rules.</li>\n        <li><strong>appLoadingIndicator.hideAutomatically</strong> allows you to disable automatic hiding of the app loading indicator, which is enabled by default in case the app loading indicator is being used. Take a look at the <a href=\"luigi-ux-features.md#app-loading-indicator\">App loading indicator</a> section on how to use this feature.</li>\n      </ul>\n    </blockquote>\n  </body>\n</html>\n"}
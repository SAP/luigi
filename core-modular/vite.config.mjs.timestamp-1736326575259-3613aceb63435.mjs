// vite.config.mjs
import { defineConfig } from "file:///Users/D061203/dev/luigi/luigirepo/core-modular/node_modules/vite/dist/node/index.js";
import { svelte } from "file:///Users/D061203/dev/luigi/luigirepo/core-modular/node_modules/@sveltejs/vite-plugin-svelte/src/index.js";
import dts from "file:///Users/D061203/dev/luigi/luigirepo/core-modular/node_modules/vite-plugin-dts/dist/index.mjs";
var luigiPlugin = () => {
  return {
    enforce: "pre",
    name: "luigi-postprocess",
    generateBundle: (options, bundle) => {
      const jsFile = bundle["luigi.js"];
      jsFile.code = jsFile.code.replace("__luigi_dyn_import_____________(", "import(/* webpackIgnore: true */");
    }
  };
};
var vite_config_default = defineConfig({
  assetsInclude: /\.(png|jpg|gif|svg|eot|ttf|woff|woff2)$/,
  base: "",
  build: {
    sourcemap: true,
    chunkSizeWarningLimit: 650,
    rollupOptions: {
      input: ["src/main.ts"],
      output: {
        entryFileNames: "luigi.js",
        format: "es"
      },
      plugins: []
    },
    outDir: "public"
  },
  publicDir: "public_root",
  plugins: [luigiPlugin(), svelte(), dts()]
});
export {
  vite_config_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsidml0ZS5jb25maWcubWpzIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyJjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfZGlybmFtZSA9IFwiL1VzZXJzL0QwNjEyMDMvZGV2L2x1aWdpL2x1aWdpcmVwby9jb3JlLW1vZHVsYXJcIjtjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfZmlsZW5hbWUgPSBcIi9Vc2Vycy9EMDYxMjAzL2Rldi9sdWlnaS9sdWlnaXJlcG8vY29yZS1tb2R1bGFyL3ZpdGUuY29uZmlnLm1qc1wiO2NvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9pbXBvcnRfbWV0YV91cmwgPSBcImZpbGU6Ly8vVXNlcnMvRDA2MTIwMy9kZXYvbHVpZ2kvbHVpZ2lyZXBvL2NvcmUtbW9kdWxhci92aXRlLmNvbmZpZy5tanNcIjtpbXBvcnQgeyBkZWZpbmVDb25maWcgfSBmcm9tICd2aXRlJztcbmltcG9ydCB7IHN2ZWx0ZSB9IGZyb20gJ0BzdmVsdGVqcy92aXRlLXBsdWdpbi1zdmVsdGUnO1xuaW1wb3J0IGR0cyBmcm9tICd2aXRlLXBsdWdpbi1kdHMnO1xuLy8gaW1wb3J0ICogYXMgY3NzdHJlZSBmcm9tICdjc3MtdHJlZSc7XG4vLyBpbXBvcnQgKiBhcyBmcyBmcm9tICdmcyc7XG5cbmNvbnN0IGx1aWdpUGx1Z2luID0gKCkgPT4ge1xuICByZXR1cm4ge1xuICAgIGVuZm9yY2U6ICdwcmUnLFxuICAgIG5hbWU6ICdsdWlnaS1wb3N0cHJvY2VzcycsXG4gICAgZ2VuZXJhdGVCdW5kbGU6IChvcHRpb25zLCBidW5kbGUpID0+IHtcbiAgICAgIC8vIGNvbnN0IGNzc0ZpbGUgPSBidW5kbGVbJ2x1aWdpX2NvcmUuY3NzJ107XG4gICAgICAvLyBjc3NGaWxlLnNvdXJjZSA9IGNzc0ZpbGUuc291cmNlLnJlcGxhY2UoLyhcXC5zdmVsdGUtW2EtejAtOV0rKXsyLH0vZywgbWF0Y2ggPT4ge1xuICAgICAgLy8gICBjb25zdCBzaW5nbGVIYXNoID0gbWF0Y2gubWF0Y2goL1xcLnN2ZWx0ZS1bYS16MC05XSsvZylbMF07XG4gICAgICAvLyAgIHJldHVybiBzaW5nbGVIYXNoO1xuICAgICAgLy8gfSk7XG5cbiAgICAgIGNvbnN0IGpzRmlsZSA9IGJ1bmRsZVsnbHVpZ2kuanMnXTtcbiAgICAgIGpzRmlsZS5jb2RlID0ganNGaWxlLmNvZGUucmVwbGFjZSgnX19sdWlnaV9keW5faW1wb3J0X19fX19fX19fX19fXygnLCAnaW1wb3J0KC8qIHdlYnBhY2tJZ25vcmU6IHRydWUgKi8nKTtcblxuICAgICAgLy8gY29uc3QgZmRGaW9yaUNTUyA9IGJ1bmRsZVsnZmRfZmlvcmkuY3NzJ107XG4gICAgICAvLyBjb25zdCBmZEhvcml6b25DU1MgPSBidW5kbGVbJ2ZkX2hvcml6b24uY3NzJ107XG5cbiAgICAgIC8vIGNvbnN0IGZ1bGxGaW9yaUNTUyA9ICcnICsgY3NzRmlsZS5zb3VyY2UgKyAnXFxuJyArIGZkRmlvcmlDU1Muc291cmNlO1xuICAgICAgLy8gY29uc3QgZnVsbEhvcml6b25DU1MgPSAnJyArIGNzc0ZpbGUuc291cmNlICsgJ1xcbicgKyBmZEhvcml6b25DU1Muc291cmNlO1xuXG4gICAgICAvLyBmcy53cml0ZUZpbGVTeW5jKCcuL3B1YmxpYy9sdWlnaS5jc3MnLCBmdWxsRmlvcmlDU1MpO1xuICAgICAgLy8gZnMud3JpdGVGaWxlU3luYygnLi9wdWJsaWMvbHVpZ2lfaG9yaXpvbi5jc3MnLCBmdWxsSG9yaXpvbkNTUyk7XG5cbiAgICAgIC8vIC8vIHBhcnNlIGNzcyBhbmQgZXh0cmFjdCBjdXN0b20gcHJvcGVydGllcyBpbnRvIGRlZGljYXRlZCBmaWxlXG4gICAgICAvLyBjb25zdCBjc3NWYXJBcnJheSA9IFtdO1xuICAgICAgLy8gY29uc3QgYXN0ID0gY3NzdHJlZS5wYXJzZShmdWxsRmlvcmlDU1MpO1xuICAgICAgLy8gY3NzdHJlZS53YWxrKGFzdCwgbm9kZSA9PiB7XG4gICAgICAvLyAgIGlmIChub2RlLnR5cGUgPT09ICdEZWNsYXJhdGlvbicgJiYgbm9kZS5wcm9wZXJ0eS5zdGFydHNXaXRoKCctLScpKSB7XG4gICAgICAvLyAgICAgY3NzVmFyQXJyYXkucHVzaChub2RlLnByb3BlcnR5LnN1YnN0cmluZygyKSk7XG4gICAgICAvLyAgIH1cbiAgICAgIC8vIH0pO1xuICAgICAgLy8gZnMud3JpdGVGaWxlU3luYygnLi9wdWJsaWMvbHVpZ2lfdGhlbWVfdmFycy5qcycsICd3aW5kb3cuX19sdWlnaVRoZW1lVmFycz0nICsgSlNPTi5zdHJpbmdpZnkoY3NzVmFyQXJyYXkpICsgJzsnKTtcbiAgICB9XG4gIH07XG59O1xuXG5leHBvcnQgZGVmYXVsdCBkZWZpbmVDb25maWcoe1xuICBhc3NldHNJbmNsdWRlOiAvXFwuKHBuZ3xqcGd8Z2lmfHN2Z3xlb3R8dHRmfHdvZmZ8d29mZjIpJC8sXG4gIGJhc2U6ICcnLFxuICBidWlsZDoge1xuICAgIHNvdXJjZW1hcDogdHJ1ZSxcbiAgICBjaHVua1NpemVXYXJuaW5nTGltaXQ6IDY1MCxcbiAgICByb2xsdXBPcHRpb25zOiB7XG4gICAgICBpbnB1dDogWydzcmMvbWFpbi50cyddLFxuICAgICAgb3V0cHV0OiB7XG4gICAgICAgIGVudHJ5RmlsZU5hbWVzOiAnbHVpZ2kuanMnLFxuICAgICAgICBmb3JtYXQ6ICdlcydcbiAgICAgIH0sXG4gICAgICBwbHVnaW5zOiBbXVxuICAgIH0sXG4gICAgb3V0RGlyOiAncHVibGljJ1xuICB9LFxuICBwdWJsaWNEaXI6ICdwdWJsaWNfcm9vdCcsXG4gIHBsdWdpbnM6IFtsdWlnaVBsdWdpbigpLCBzdmVsdGUoKSwgZHRzKCldXG59KTtcbiJdLAogICJtYXBwaW5ncyI6ICI7QUFBaVUsU0FBUyxvQkFBb0I7QUFDOVYsU0FBUyxjQUFjO0FBQ3ZCLE9BQU8sU0FBUztBQUloQixJQUFNLGNBQWMsTUFBTTtBQUN4QixTQUFPO0FBQUEsSUFDTCxTQUFTO0FBQUEsSUFDVCxNQUFNO0FBQUEsSUFDTixnQkFBZ0IsQ0FBQyxTQUFTLFdBQVc7QUFPbkMsWUFBTSxTQUFTLE9BQU8sVUFBVTtBQUNoQyxhQUFPLE9BQU8sT0FBTyxLQUFLLFFBQVEsb0NBQW9DLGtDQUFrQztBQUFBLElBb0IxRztBQUFBLEVBQ0Y7QUFDRjtBQUVBLElBQU8sc0JBQVEsYUFBYTtBQUFBLEVBQzFCLGVBQWU7QUFBQSxFQUNmLE1BQU07QUFBQSxFQUNOLE9BQU87QUFBQSxJQUNMLFdBQVc7QUFBQSxJQUNYLHVCQUF1QjtBQUFBLElBQ3ZCLGVBQWU7QUFBQSxNQUNiLE9BQU8sQ0FBQyxhQUFhO0FBQUEsTUFDckIsUUFBUTtBQUFBLFFBQ04sZ0JBQWdCO0FBQUEsUUFDaEIsUUFBUTtBQUFBLE1BQ1Y7QUFBQSxNQUNBLFNBQVMsQ0FBQztBQUFBLElBQ1o7QUFBQSxJQUNBLFFBQVE7QUFBQSxFQUNWO0FBQUEsRUFDQSxXQUFXO0FBQUEsRUFDWCxTQUFTLENBQUMsWUFBWSxHQUFHLE9BQU8sR0FBRyxJQUFJLENBQUM7QUFDMUMsQ0FBQzsiLAogICJuYW1lcyI6IFtdCn0K
